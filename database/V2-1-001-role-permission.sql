
-- remove old permissions
UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = '2020-08-01' WHERE "CREATE_TIMESTAMP" < '2020-01-01';

-- remove role permission with old permissions
UPDATE "SBI_ROLE_PERMISSION" RP
SET "EXPIRY_DATE"
= '2020-08-01' FROM "SBI_PERMISSION" P WHERE RP."PERMISSION_ID" = P."PERMISSION_ID" AND P."EXPIRY_DATE" < current_date;

-- remove roles with old permissions
UPDATE "SBI_ROLE" R
SET "EXPIRY_DATE"
= '2020-08-01' FROM "SBI_ROLE_PERMISSION" RP WHERE RP."ROLE_ID" = R."ROLE_ID" AND RP."EXPIRY_DATE" < current_date;

-- remove user role with old roles
UPDATE "SBI_USER_ROLE" UR
SET "EXPIRY_DATE"
= '2020-08-01' FROM "SBI_ROLE" R WHERE R."ROLE_ID" = UR."ROLE_ID" AND R."EXPIRY_DATE" < current_date;

-- add new permissions
INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'HOME', 'Permission to see the dashboard on the home page', 'Home', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'HOME');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'OWNER-R', 'Allows the user to read owner data', 'Owner Read', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'OWNER-R');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'OWNER-W', 'Allows the user to write owner data', 'Owner Write', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'OWNER-W');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'SB-R', 'Allows the user to read school bus data', 'School Bus Read', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'SB-R');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'SB-W', 'Allows the user to write school bus data', 'School Bus Write', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'SB-W');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'USER-R', 'Allows the user to read user data', 'User Read', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'USER-R');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'USER-W', 'Allows the user to write user data', 'User Write', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'USER-W');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'ROLE-R', 'Allows the user to read role data', 'Role Read', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'ROLE-R');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'ROLE-W', 'Allows the user to write role data', 'Role Write', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'ROLE-W');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'CODE-R', 'Allows the user to read code data', 'Code Read', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'CODE-R');

INSERT INTO "SBI_PERMISSION"
  ("CODE", "DESCRIPTION", "NAME", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'CODE-W', 'Allows the user to write code data', 'Code Write', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_PERMISSION"
WHERE "CODE" = 'CODE-W');

-- activate the new permissions just in case there were existing ones that were removed (expired)

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'HOME';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'OWNER-R';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'OWNER-W';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'SB-R';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'SB-W';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'USER-R';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'USER-W';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'ROLE-R';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'ROLE-W';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'CODE-R';

UPDATE "SBI_PERMISSION" SET "EXPIRY_DATE" = null, "CREATE_TIMESTAMP" = current_date, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "CODE" = 'CODE-W';

-- add new roles
INSERT INTO "SBI_ROLE"
  ("NAME", "DESCRIPTION", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'System Administrator', 'System Administrator; full access to the whole system.', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE"
WHERE "NAME" = 'System Administrator');

INSERT INTO "SBI_ROLE"
  ("NAME", "DESCRIPTION", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'Manager', 'Manager; read access to owners and school buses', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE"
WHERE "NAME" = 'Manager');

INSERT INTO "SBI_ROLE"
  ("NAME", "DESCRIPTION", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'Inspector', 'Inspector; Read/Write access to owners and school buses', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE"
WHERE "NAME" = 'Inspector');

INSERT INTO "SBI_ROLE"
  ("NAME", "DESCRIPTION", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT 'Read Only', 'Read access to the whole system', current_date, 'YCHUNG', current_date, 'YCHUNG'
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE"
WHERE "NAME" = 'Read Only');

-- reactivate the new roles just in case there were existing ones that were removed (expired)

UPDATE "SBI_ROLE" SET "EXPIRY_DATE" = null, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "NAME" = 'System Administrator';

UPDATE "SBI_ROLE" SET "EXPIRY_DATE" = null, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "NAME" = 'Manager';

UPDATE "SBI_ROLE" SET "EXPIRY_DATE" = null, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "NAME" = 'Inspector';

UPDATE "SBI_ROLE" SET "EXPIRY_DATE" = null, "LAST_UPDATE_TIMESTAMP" = current_date WHERE "NAME" = 'Read Only';

-- assign new permissions to new roles
WITH
  ADMINROLE
  AS
  (
    SELECT P."PERMISSION_ID", R."ROLE_ID"
    FROM "SBI_ROLE" R, "SBI_PERMISSION" P
    WHERE R."NAME" = 'System Administrator' AND P."CODE" IN ('HOME', 'OWNER-R', 'OWNER-W', 'SB-R', 'SB-W', 'USER-R', 'USER-W', 'ROLE-R', 'ROLE-W', 'CODE-R', 'CODE-W')
  ),
RPINSERT AS (
INSERT INTO "SBI_ROLE_PERMISSION"
  ("PERMISSION_ID", "ROLE_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT "PERMISSION_ID", "ROLE_ID", current_date, 'YCHUNG', current_date, 'YCHUNG'
FROM ADMINROLE
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE_PERMISSION" RP, ADMINROLE A
WHERE RP."PERMISSION_ID" = A."PERMISSION_ID" AND RP."ROLE_ID" = A."ROLE_ID")
)
SELECT COUNT(*)
FROM ADMINROLE;

WITH
  MANAGERROLE
  AS
  (
    SELECT P."PERMISSION_ID", R."ROLE_ID"
    FROM "SBI_ROLE" R, "SBI_PERMISSION" P
    WHERE R."NAME" = 'Manager' AND P."CODE" IN ('OWNER-R', 'SB-R', 'CODE-R')
  ),
RPINSERT AS (
INSERT INTO "SBI_ROLE_PERMISSION"
  ("PERMISSION_ID", "ROLE_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT "PERMISSION_ID", "ROLE_ID", current_date, 'YCHUNG', current_date, 'YCHUNG'
FROM MANAGERROLE
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE_PERMISSION" RP, MANAGERROLE A
WHERE RP."PERMISSION_ID" = A."PERMISSION_ID" AND RP."ROLE_ID" = A."ROLE_ID")
)
SELECT COUNT(*)
FROM MANAGERROLE;

WITH
  INSPECTORROLE
  AS
  (
    SELECT P."PERMISSION_ID", R."ROLE_ID"
    FROM "SBI_ROLE" R, "SBI_PERMISSION" P
    WHERE R."NAME" = 'Inspector' AND P."CODE" IN ('HOME', 'OWNER-R', 'OWNER-W', 'SB-R', 'SB-W', 'CODE-R')
  ),
RPINSERT AS (
INSERT INTO "SBI_ROLE_PERMISSION"
  ("PERMISSION_ID", "ROLE_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT "PERMISSION_ID", "ROLE_ID", current_date, 'YCHUNG', current_date, 'YCHUNG'
FROM INSPECTORROLE
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE_PERMISSION" RP, INSPECTORROLE A
WHERE RP."PERMISSION_ID" = A."PERMISSION_ID" AND RP."ROLE_ID" = A."ROLE_ID")
)
SELECT COUNT(*)
FROM INSPECTORROLE;

WITH
  READONLYROLE
  AS
  (
    SELECT P."PERMISSION_ID", R."ROLE_ID"
    FROM "SBI_ROLE" R, "SBI_PERMISSION" P
    WHERE R."NAME" = 'Read Only' AND P."CODE" IN ('HOME', 'OWNER-R', 'SB-R', 'USER-R', 'ROLE-R', 'CODE-R')
  ),
RPINSERT AS (
INSERT INTO "SBI_ROLE_PERMISSION"
  ("PERMISSION_ID", "ROLE_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT "PERMISSION_ID", "ROLE_ID", current_date, 'YCHUNG', current_date, 'YCHUNG'
FROM READONLYROLE
WHERE NOT EXISTS (SELECT 1
FROM "SBI_ROLE_PERMISSION" RP, READONLYROLE A
WHERE RP."PERMISSION_ID" = A."PERMISSION_ID" AND RP."ROLE_ID" = A."ROLE_ID")
)
SELECT COUNT(*)
FROM READONLYROLE;

-- assign manager role to users
WITH
  MANAGERS
  AS
  (
    SELECT GM."USER_ID"
    FROM "SBI_GROUP_MEMBERSHIP" GM, "SBI_GROUP" G
    WHERE GM."GROUP_ID" = G."GROUP_ID" AND G."NAME" = 'Manager' AND GM."ACTIVE" = true
  ),
  INSPECTORS
  AS
  (
    SELECT GM."USER_ID"
    FROM "SBI_GROUP_MEMBERSHIP" GM, "SBI_GROUP" G
    WHERE GM."GROUP_ID" = G."GROUP_ID" AND G."NAME" = 'Inspector' AND GM."ACTIVE" = true
  ),
  USERROLES
  AS
  (
    SELECT (SELECT "ROLE_ID"
      FROM "SBI_ROLE"
      WHERE "NAME" = 'Manager'), U."USER_ID"
    FROM "SBI_USER" U, MANAGERS M
    WHERE U."USER_ID" = M."USER_ID" AND NOT EXISTS (SELECT 1
      FROM INSPECTORS I
      WHERE I."USER_ID" = M."USER_ID")
  ),
URINSERT AS (
INSERT INTO "SBI_USER_ROLE"
  ("EFFECTIVE_DATE", "ROLE_ID", "USER_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT CURRENT_DATE, "ROLE_ID", "USER_ID", CURRENT_DATE, 'YCHUNG', CURRENT_DATE, 'YCHUNG'
FROM USERROLES UI
WHERE NOT EXISTS (SELECT 1
FROM "SBI_USER_ROLE" UR
WHERE UR."USER_ID" = UI."USER_ID" AND UR."ROLE_ID" = UI."ROLE_ID")
RETURNING "USER_ROLE_ID"
)
SELECT COUNT(*)
FROM USERROLES;

-- assign inspector role to users
WITH
  INSPECTORS
  AS
  (
    SELECT GM."USER_ID"
    FROM "SBI_GROUP_MEMBERSHIP" GM, "SBI_GROUP" G
    WHERE GM."GROUP_ID" = G."GROUP_ID" AND G."NAME" = 'Inspector' AND GM."ACTIVE" = true
  ),
  USERROLES
  AS
  (
    SELECT (SELECT "ROLE_ID"
      FROM "SBI_ROLE"
      WHERE "NAME" = 'Inspector'), U."USER_ID"
    FROM "SBI_USER" U, INSPECTORS I
    WHERE U."USER_ID" = I."USER_ID"
  ),
URINSERT AS (
INSERT INTO "SBI_USER_ROLE"
  ("EFFECTIVE_DATE", "ROLE_ID", "USER_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT CURRENT_DATE, "ROLE_ID", "USER_ID", CURRENT_DATE, 'YCHUNG', CURRENT_DATE, 'YCHUNG'
FROM USERROLES UI
WHERE NOT EXISTS (SELECT 1
FROM "SBI_USER_ROLE" UR
WHERE UR."USER_ID" = UI."USER_ID" AND UR."ROLE_ID" = UI."ROLE_ID")
RETURNING "USER_ROLE_ID"
)
SELECT COUNT(*)
FROM USERROLES;

-- assign admin role to users
WITH
  ADMINS
  AS
  (
    SELECT U."USER_ID", (SELECT "ROLE_ID"
      FROM "SBI_ROLE"
      WHERE "NAME" = 'System Administrator')
    FROM "SBI_USER" U
    WHERE U."SM_USER_ID" IN ('GEFORD', 'AGRIFFIN', 'YCHUNG', 'dbhargav', 'nli')
  ),
URINSERT AS (
INSERT INTO "SBI_USER_ROLE"
  ("EFFECTIVE_DATE", "ROLE_ID", "USER_ID", "CREATE_TIMESTAMP", "CREATE_USERID", "LAST_UPDATE_TIMESTAMP", "LAST_UPDATE_USERID")
SELECT CURRENT_DATE, "ROLE_ID", "USER_ID", CURRENT_DATE, 'YCHUNG', CURRENT_DATE, 'YCHUNG'
FROM ADMINS A
WHERE NOT EXISTS (SELECT 1
FROM "SBI_USER_ROLE" UR
WHERE UR."USER_ID" = A."USER_ID" AND UR."ROLE_ID" = A."ROLE_ID")
RETURNING "USER_ROLE_ID"
)
SELECT COUNT(*)
FROM ADMINS;

--DELETE FROM "SBI_USER_ROLE" WHERE "EXPIRY_DATE" IS NOT NULL;
--DELETE FROM "SBI_ROLE_PERMISSION" WHERE "EXPIRY_DATE" IS NOT NULL;
--DELETE FROM "SBI_ROLE" WHERE "EXPIRY_DATE" IS NOT NULL;
--DELETE FROM "SBI_PERMISSION" WHERE "EXPIRY_DATE" IS NOT NULL;



